#!/usr/bin/env python3
"""
Vulnerability Database
Store and manage vulnerability findings
"""

import json
import sqlite3
from datetime import datetime
from pathlib import Path

class VulnerabilityDB:
    def __init__(self, db_path="database/vulnhunter.db"):
        self.db_path = db_path
        self.init_database()
    
    def init_database(self):
        """Inicializar base de datos"""
        Path(self.db_path).parent.mkdir(exist_ok=True)
        
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS scans (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                target TEXT NOT NULL,
                scan_date DATETIME DEFAULT CURRENT_TIMESTAMP,
                scan_mode TEXT,
                duration REAL,
                vulnerabilities_count INTEGER
            )
        """)
        
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS vulnerabilities (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                scan_id INTEGER,
                type TEXT,
                severity TEXT,
                url TEXT,
                evidence TEXT,
                category TEXT,
                FOREIGN KEY (scan_id) REFERENCES scans (id)
            )
        """)
        
        conn.commit()
        conn.close()
    
    def save_scan(self, scan_results):
        """Guardar resultado de escaneo"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        # Insertar escaneo
        cursor.execute("""
            INSERT INTO scans (target, scan_mode, duration, vulnerabilities_count)
            VALUES (?, ?, ?, ?)
        """, (
            scan_results['target'],
            'quick',  # TODO: obtener del scan_results
            scan_results['scan_stats']['end_time'] - scan_results['scan_stats']['start_time'],
            len(scan_results['vulnerabilities'])
        ))
        
        scan_id = cursor.lastrowid
        
        # Insertar vulnerabilidades
        for vuln in scan_results['vulnerabilities']:
            cursor.execute("""
                INSERT INTO vulnerabilities (scan_id, type, severity, url, evidence, category)
                VALUES (?, ?, ?, ?, ?, ?)
            """, (
                scan_id,
                vuln.get('type', ''),
                vuln.get('severity', ''),
                vuln.get('url', ''),
                vuln.get('evidence', ''),
                vuln.get('category', '')
            ))
        
        conn.commit()
        conn.close()
        
        return scan_id
